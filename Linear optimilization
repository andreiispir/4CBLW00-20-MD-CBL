import pandas as pd
import geopandas as gpd
import matplotlib.pyplot as plt
import os
from pyproj import datadir


# Step 1: Load the crime data
file_path = r"C:\Users\HP\Downloads\(Copy) london_crime_with_wards.csv"
data = pd.read_csv(file_path)

# Step 2: Summarize burglaries by ward
ward_data = data[data['Crime type'] == 'Burglary'].groupby('NAME')['Crime type'].count().reset_index()
ward_data.columns = ['WARD', 'BURGLARIES']

# Step 3: Normalize burglaries and assign officers (maximum 100 per ward)
max_burglaries = ward_data['BURGLARIES'].max()
ward_data['WEIGHT'] = ward_data['BURGLARIES'] / max_burglaries
ward_data['OFFICERS'] = (ward_data['WEIGHT'] * 100).round().astype(int)
ward_data['OFFICERS'] = ward_data['OFFICERS'].clip(upper=100)  # Cap at 100 officers

# Save officer allocation for reference
output_path = r"C:\Users\HP\Downloads\officer_allocation_proportional.csv"
ward_data.to_csv(output_path, index=False)
print(f"Officer allocation saved to {output_path}.")

# Step 4: Load the ward boundaries shapefile

shapefile_path = r"C:\Users\HP\Downloads\London-wards-2018\London-wards-2018_ESRI\London_Ward.shp"
wards_gdf = gpd.read_file(shapefile_path)

# Step 5: Merge the allocation data with the geospatial data
allocation_df = ward_data[['WARD', 'OFFICERS']].rename(columns={'WARD': 'NAME'})
merged_gdf = wards_gdf.merge(allocation_df, on='NAME', how='left')

# Step 6: Plot the data
fig, ax = plt.subplots(1, 1, figsize=(12, 12))
merged_gdf.plot(
    column='OFFICERS',
    cmap='Blues',
    linewidth=0.8,
    ax=ax,
    edgecolor='0.8',
    legend=True
)
ax.set_title('Optimized Police Officer Allocation per London Ward - Proportional', fontsize=15)
ax.axis('off')
plt.show()

# Save the plot
map_output_path = r"C:\Users\HP\Downloads\officer_allocation_map.png"
fig.savefig(map_output_path, dpi=300)
print(f"Map saved to {map_output_path}.")
